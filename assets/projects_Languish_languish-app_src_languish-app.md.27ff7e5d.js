import{o as n,c as s,a}from"./app.d7d0a0d8.js";const t='{"title":"","description":"","frontmatter":{},"relativePath":"projects/Languish/languish-app/src/languish-app.md","lastUpdated":1652557821791}',p={},o=a('<div class="language-python"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> LitElement<span class="token punctuation">,</span> html<span class="token punctuation">,</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> customElement<span class="token punctuation">,</span> <span class="token builtin">property</span><span class="token punctuation">,</span> state <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit/decorators.js&#39;</span><span class="token punctuation">;</span>\n\nconst logo <span class="token operator">=</span> new URL<span class="token punctuation">(</span><span class="token string">&#39;../../assets/open-wc-logo.svg&#39;</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>\n\nconst TRANSLATION_URL <span class="token operator">=</span>\n  <span class="token string">&#39;https://wik42wkvzpkrpoxt4bbgsndw6i0qsfqo.lambda-url.us-east-1.on.aws&#39;</span><span class="token punctuation">;</span>\n\n\n</code></pre></div><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@customElement</span><span class="token punctuation">(</span><span class="token string">&#39;languish-app&#39;</span><span class="token punctuation">)</span>\nexport <span class="token keyword">class</span> <span class="token class-name">LanguishApp</span> extends LitElement <span class="token punctuation">{</span>\n  <span class="token decorator annotation punctuation">@property</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  title <span class="token operator">=</span> <span class="token string">&#39;Langu-ish&#39;</span><span class="token punctuation">;</span>\n\n  static styles <span class="token operator">=</span> css`\n    <span class="token punctuation">:</span>host <span class="token punctuation">{</span>\n      <span class="token builtin">min</span><span class="token operator">-</span>height<span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>\n      display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n      flex<span class="token operator">-</span>direction<span class="token punctuation">:</span> column<span class="token punctuation">;</span>\n      align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n      justify<span class="token operator">-</span>content<span class="token punctuation">:</span> flex<span class="token operator">-</span>start<span class="token punctuation">;</span>\n      font<span class="token operator">-</span>size<span class="token punctuation">:</span> calc<span class="token punctuation">(</span>10px <span class="token operator">+</span> 2vmin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      color<span class="token punctuation">:</span> <span class="token comment">#1a2b42;</span>\n      <span class="token builtin">max</span><span class="token operator">-</span>width<span class="token punctuation">:</span> 960px<span class="token punctuation">;</span>\n      margin<span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n      text<span class="token operator">-</span>align<span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n      background<span class="token operator">-</span>color<span class="token punctuation">:</span> var<span class="token punctuation">(</span><span class="token operator">-</span><span class="token operator">-</span>languish<span class="token operator">-</span>app<span class="token operator">-</span>background<span class="token operator">-</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    main <span class="token punctuation">{</span>\n      flex<span class="token operator">-</span>grow<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>logo <span class="token punctuation">{</span>\n      margin<span class="token operator">-</span>top<span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>\n      animation<span class="token punctuation">:</span> app<span class="token operator">-</span>logo<span class="token operator">-</span>spin infinite 20s linear<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token decorator annotation punctuation">@keyframes</span> app<span class="token operator">-</span>logo<span class="token operator">-</span>spin <span class="token punctuation">{</span>\n      <span class="token keyword">from</span> <span class="token punctuation">{</span>\n        transform<span class="token punctuation">:</span> rotate<span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      to <span class="token punctuation">{</span>\n        transform<span class="token punctuation">:</span> rotate<span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>app<span class="token operator">-</span>footer <span class="token punctuation">{</span>\n      font<span class="token operator">-</span>size<span class="token punctuation">:</span> calc<span class="token punctuation">(</span>12px <span class="token operator">+</span> <span class="token number">0.</span>5vmin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      align<span class="token operator">-</span>items<span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>app<span class="token operator">-</span>footer a <span class="token punctuation">{</span>\n      margin<span class="token operator">-</span>left<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>translation<span class="token operator">-</span>row <span class="token punctuation">{</span>\n      display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n      flex<span class="token operator">-</span>direction<span class="token punctuation">:</span> row<span class="token punctuation">;</span>\n      gap<span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n      border<span class="token punctuation">:</span> 2px solid white<span class="token punctuation">;</span>\n      border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  `<span class="token punctuation">;</span>\n\n  render<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> html`\n      <span class="token operator">&lt;</span>main<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;logo&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">&quot;open-wc logo&quot;</span> src<span class="token operator">=</span>$<span class="token punctuation">{</span>logo<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>The world&#39;s worst way to learn a language<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\n\n        <span class="token operator">&lt;</span>select @change<span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_handleLangChange<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;fr&quot;</span><span class="token operator">&gt;</span>French<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;es&quot;</span><span class="token operator">&gt;</span>Spanish<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;de&quot;</span><span class="token operator">&gt;</span>German<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;sr&quot;</span><span class="token operator">&gt;</span>Serbian<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>\n\n        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;translation-row&quot;</span><span class="token operator">&gt;</span>\n          <span class="token operator">&lt;</span>textarea cols<span class="token operator">=</span><span class="token string">&quot;30&quot;</span> rows<span class="token operator">=</span><span class="token string">&quot;10&quot;</span> <span class="token decorator annotation punctuation">@input</span><span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_handleInput<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">&gt;</span>\n          $<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_translation <span class="token operator">==</span> null\n            ? html`<span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>\n                $<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_isLoading\n                  ? <span class="token string">&#39;Translation is loading...&#39;</span>\n                  <span class="token punctuation">:</span> <span class="token string">&#39;Translated text will appear here.&#39;</span><span class="token punctuation">}</span>\n              <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>`\n            <span class="token punctuation">:</span> html`<span class="token operator">&lt;</span>p lang<span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_targetLang<span class="token punctuation">}</span><span class="token operator">&gt;</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_translation<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>`<span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n\n        <span class="token operator">&lt;</span>button\n          <span class="token decorator annotation punctuation">@click</span><span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_translate<span class="token punctuation">}</span>\n          ?disabled<span class="token operator">=</span>$<span class="token punctuation">{</span>!this<span class="token punctuation">.</span>_computeCanTranslate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">&gt;</span>\n          Translate\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n\n        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_speak<span class="token punctuation">}</span> ?disabled<span class="token operator">=</span>$<span class="token punctuation">{</span>!this<span class="token punctuation">.</span>_computeCanSpeak<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\n          Speak\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>\n\n      <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;app-footer&quot;</span><span class="token operator">&gt;</span>\n        Made <span class="token keyword">with</span> ♥️ by\n        <span class="token operator">&lt;</span>strong<span class="token operator">&gt;</span>Kai Prince<span class="token operator">&lt;</span><span class="token operator">/</span>strong<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\n    `<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token decorator annotation punctuation">@state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  private _translation<span class="token punctuation">:</span> string <span class="token operator">|</span> null <span class="token operator">=</span> null<span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  private _targetLang<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">&#39;fr&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  private _text<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  private _isLoading<span class="token punctuation">:</span> boolean <span class="token operator">=</span> false<span class="token punctuation">;</span>\n\n  private _handleInput<span class="token punctuation">(</span>e<span class="token punctuation">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    const text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value ?? <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>_text <span class="token operator">=</span> text<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  private _handleLangChange<span class="token punctuation">(</span>e<span class="token punctuation">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    const text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value ?? <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>_targetLang <span class="token operator">=</span> text<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  private _computeCanTranslate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> boolean <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> !!this<span class="token punctuation">.</span>_text<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  private _computeCanSpeak<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> boolean <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> !!this<span class="token punctuation">.</span>_translation?<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  private <span class="token keyword">async</span> _translate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>void<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!this<span class="token punctuation">.</span>_computeCanTranslate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!TRANSLATION_URL<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    this<span class="token punctuation">.</span>_isLoading <span class="token operator">=</span> true<span class="token punctuation">;</span>\n\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      const res <span class="token operator">=</span> <span class="token keyword">await</span> fetch<span class="token punctuation">(</span>TRANSLATION_URL<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        method<span class="token punctuation">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span>stringify<span class="token punctuation">(</span><span class="token punctuation">{</span>\n          text<span class="token punctuation">:</span> this<span class="token punctuation">.</span>_text<span class="token punctuation">,</span>\n          sourceLang<span class="token punctuation">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span>\n          targetLang<span class="token punctuation">:</span> this<span class="token punctuation">.</span>_targetLang<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      const json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      this<span class="token punctuation">.</span>_translation <span class="token operator">=</span> json<span class="token punctuation">.</span>result<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n      this<span class="token punctuation">.</span>_isLoading <span class="token operator">=</span> false<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  private <span class="token keyword">async</span> _speak<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!this<span class="token punctuation">.</span>_computeCanSpeak<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">|</span> !this<span class="token punctuation">.</span>_translation<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    const text <span class="token operator">=</span> this<span class="token punctuation">.</span>_translation<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>\n      <span class="token string">&#39;speechSynthesis&#39;</span> <span class="token keyword">in</span> window <span class="token operator">&amp;</span><span class="token operator">&amp;</span>\n      window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span>getVoices<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length\n    <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token operator">//</span> Speech Synthesis supported\n\n      const msg <span class="token operator">=</span> new SpeechSynthesisUtterance<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      msg<span class="token punctuation">.</span>lang <span class="token operator">=</span> this<span class="token punctuation">.</span>_targetLang<span class="token punctuation">;</span>\n      msg<span class="token punctuation">.</span>rate <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>\n      window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span>speak<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token operator">//</span> Speech Synthesis <span class="token keyword">not</span> supported\n      this<span class="token punctuation">.</span>_translation <span class="token operator">=</span> <span class="token string">&quot;Sorry, your browser doesn&#39;t support text to speech!&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\ndeclare <span class="token keyword">global</span> <span class="token punctuation">{</span>\n  interface HTMLElementTagNameMap <span class="token punctuation">{</span>\n    <span class="token string">&#39;languish-app&#39;</span><span class="token punctuation">:</span> LanguishApp<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre></div>',2);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
