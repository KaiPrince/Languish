import{o as n,c as s,a}from"./app.ba656c22.js";const t='{"title":"","description":"","frontmatter":{},"relativePath":"projects/Languish/languish-app/src/components/word-viewer.md","lastUpdated":1652825038243}',p={},o=a('<div class="language-python"><pre><code><span class="token operator">/</span><span class="token operator">*</span> eslint<span class="token operator">-</span>disable wc<span class="token operator">/</span>guard<span class="token operator">-</span><span class="token builtin">super</span><span class="token operator">-</span>call <span class="token operator">*</span><span class="token operator">/</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css<span class="token punctuation">,</span> html<span class="token punctuation">,</span> LitElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> customElement<span class="token punctuation">,</span> <span class="token builtin">property</span><span class="token punctuation">,</span> state <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit/decorators.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> unsafeHTML <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit/directives/unsafe-html.js&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> SpeedReader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../utils/spritz.js&#39;</span><span class="token punctuation">;</span>\n\n\n</code></pre></div><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@customElement</span><span class="token punctuation">(</span><span class="token string">&#39;word-viewer&#39;</span><span class="token punctuation">)</span>\nexport default <span class="token keyword">class</span> <span class="token class-name">WordViewer</span> extends LitElement <span class="token punctuation">{</span>\n  static styles <span class="token operator">=</span> css`\n    <span class="token punctuation">:</span>host <span class="token punctuation">{</span>\n      text<span class="token operator">-</span>align<span class="token punctuation">:</span> start<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    pre <span class="token punctuation">{</span>\n      padding<span class="token punctuation">:</span> <span class="token number">0.</span>2em<span class="token punctuation">;</span>\n      margin<span class="token punctuation">:</span> unset<span class="token punctuation">;</span>\n      font<span class="token operator">-</span>family<span class="token punctuation">:</span> unset<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>highlight <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  `<span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@state</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  private idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@property</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  words <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token decorator annotation punctuation">@property</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token builtin">type</span><span class="token punctuation">:</span> Boolean <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  play <span class="token operator">=</span> false<span class="token punctuation">;</span>\n\n  private intervalTimer?<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n\n  connectedCallback<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">super</span><span class="token punctuation">.</span>connectedCallback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>intervalTimer <span class="token operator">=</span> setInterval<span class="token punctuation">(</span>this<span class="token punctuation">.</span>tickToNextWord<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  disconnectedCallback<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">super</span><span class="token punctuation">.</span>disconnectedCallback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    clearInterval<span class="token punctuation">(</span>this<span class="token punctuation">.</span>intervalTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>intervalTimer <span class="token operator">=</span> undefined<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  render<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> html`<span class="token operator">&lt;</span>pre<span class="token operator">&gt;</span>$<span class="token punctuation">{</span>unsafeHTML<span class="token punctuation">(</span>this<span class="token punctuation">.</span>_computeWordHtml<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>pre<span class="token operator">&gt;</span>`<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  tickToNextWord <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>this<span class="token punctuation">.</span>play<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      this<span class="token punctuation">.</span>idx <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  private _computeWordHtml<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!this<span class="token punctuation">.</span>words<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    const splitWords <span class="token operator">=</span> this<span class="token punctuation">.</span>words<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    const idx <span class="token operator">=</span>\n      <span class="token punctuation">(</span><span class="token punctuation">(</span>this<span class="token punctuation">.</span>idx <span class="token operator">%</span> splitWords<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> splitWords<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">%</span> splitWords<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    const word <span class="token operator">=</span> splitWords<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> SpeedReader<span class="token punctuation">.</span>padAndHighlightWord<span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre></div>',2);p.render=function(a,t,p,c,e,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
