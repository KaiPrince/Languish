import{o as n,c as s,a}from"./app.ba656c22.js";const t='{"title":"","description":"","frontmatter":{},"relativePath":"projects/Languish/languish-app/src/components/language-picker.md","lastUpdated":1652585967352}',p={},o=a('<div class="language-python"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> css<span class="token punctuation">,</span> html<span class="token punctuation">,</span> LitElement <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> customElement<span class="token punctuation">,</span> <span class="token builtin">property</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lit/decorators.js&#39;</span><span class="token punctuation">;</span>\n\n\n</code></pre></div><div class="language-python"><pre><code><span class="token decorator annotation punctuation">@customElement</span><span class="token punctuation">(</span><span class="token string">&#39;language-picker&#39;</span><span class="token punctuation">)</span>\nexport default <span class="token keyword">class</span> <span class="token class-name">LanguagePicker</span> extends LitElement <span class="token punctuation">{</span>\n  <span class="token decorator annotation punctuation">@property</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  value<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">;</span>\n\n  static styles <span class="token operator">=</span> css`\n    <span class="token punctuation">:</span>host <span class="token punctuation">{</span>\n      width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>\n      height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token punctuation">.</span>control <span class="token punctuation">{</span>\n      width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>\n      height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>\n      border<span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n      border<span class="token operator">-</span>radius<span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  `<span class="token punctuation">;</span>\n\n  render<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> html`\n      <span class="token operator">&lt;</span>select\n        <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;control&quot;</span>\n        <span class="token decorator annotation punctuation">@change</span><span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>_handleLangChange<span class="token punctuation">}</span>\n        <span class="token punctuation">.</span>value<span class="token operator">=</span>$<span class="token punctuation">{</span>this<span class="token punctuation">.</span>value<span class="token punctuation">}</span>\n      <span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>English<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;fr&quot;</span><span class="token operator">&gt;</span>French<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;es&quot;</span><span class="token operator">&gt;</span>Spanish<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;de&quot;</span><span class="token operator">&gt;</span>German<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;sr&quot;</span><span class="token operator">&gt;</span>Serbian<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>\n    `<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  private _handleLangChange<span class="token punctuation">(</span>e<span class="token punctuation">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    const text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value ?? <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>value <span class="token operator">=</span> text<span class="token punctuation">;</span>\n    this<span class="token punctuation">.</span>dispatchEvent<span class="token punctuation">(</span>\n      new CustomEvent<span class="token punctuation">(</span><span class="token string">&#39;onChange&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        detail<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          value<span class="token punctuation">:</span> text<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        composed<span class="token punctuation">:</span> true<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre></div>',2);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
